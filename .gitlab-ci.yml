image: docker:24.0.5

services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG_FE: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  IMAGE_TAG_BE: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  WORKDIR: /home/deployer/app/ontoolaz

before_script:
  - apk add --no-cache curl
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts

build_fe:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes: [frontend/**]
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes: [frontend/**]
  script:
    - docker build -t $IMAGE_TAG_FE ./frontend
    - docker push $IMAGE_TAG_FE

build_be:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes: [backend/**]
    - if: '$CI_COMMIT_BRANCH == "master" && $FORCE_DEPLOY == "true"'
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes: [backend/**]
  script:
    - docker build -t $IMAGE_TAG_BE ./backend
    - docker push $IMAGE_TAG_BE

deploy_fe_dev:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes: [frontend/**]
  environment:
    name: dev
  script:
    - |
      set -e
      ssh $SSH_USER@$SSH_HOST "
        cd $WORKDIR/frontend &&
        docker compose pull &&
        docker compose down &&
        docker compose up -d
      "
      sh $CI_PROJECT_DIR/send_telegram.sh "[FE - DEV] ✅ DEPLOYED" "Image: \`$IMAGE_TAG_FE\`%0ABranch: \`$CI_COMMIT_REF_NAME\`%0ABy: \`$GITLAB_USER_NAME\`%0ATime: \`$(date -u '+%Y-%m-%d %H:%M UTC')\`"

deploy_be_dev:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes: [backend/**]
  environment:
    name: dev
  script:
    - |
      set -e
      ssh $SSH_USER@$SSH_HOST "
        cd $WORKDIR/backend &&
        docker compose pull &&
        docker compose down &&
        docker compose up -d
      "
      sh $CI_PROJECT_DIR/send_telegram.sh "[BE - DEV] ✅ DEPLOYED" "Image: \`$IMAGE_TAG_BE\`%0ABranch: \`$CI_COMMIT_REF_NAME\`%0ABy: \`$GITLAB_USER_NAME\`%0ATime: \`$(date -u '+%Y-%m-%d %H:%M UTC')\`"

deploy_fe_prod:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes: [frontend/**]
      when: manual
  environment:
    name: production
  script:
    - |
      set -e
      ssh $SSH_USER@$SSH_HOST "
        echo $DEPLOY_REGISTRY_PASSWORD | docker login -u $DEPLOY_REGISTRY_USER --password-stdin registry.gitlab.com &&
        cd $WORKDIR/frontend &&
        export IMAGE_TAG=$CI_COMMIT_SHORT_SHA &&
        export NODE_ENV=production &&
        docker compose pull &&
        docker compose down &&
        docker compose up -d
      "
      sh $CI_PROJECT_DIR/send_telegram.sh "[FE - PROD] ✅ DEPLOYED" "Image: \`$IMAGE_TAG_FE\`%0ABranch: \`$CI_COMMIT_REF_NAME\`%0ABy: \`$GITLAB_USER_NAME\`%0ATime: \`$(date -u '+%Y-%m-%d %H:%M UTC')\`"
  after_script:
    - |
      if [ "$CI_JOB_STATUS" != "success" ]; then
        sh $CI_PROJECT_DIR/send_telegram.sh "[FE - PROD] ❌ FAILED" "Job: \`$CI_JOB_NAME\`%0AStatus: \`$CI_JOB_STATUS\`%0ABranch: \`$CI_COMMIT_REF_NAME\`%0ABy: \`$GITLAB_USER_NAME\`"
      fi

deploy_be_prod:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $FORCE_DEPLOY == "true"'
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes: [backend/**]
      when: manual
  environment:
    name: production
  script:
    - |
      set -e
      ssh $SSH_USER@$SSH_HOST "
        echo $DEPLOY_REGISTRY_PASSWORD | docker login -u $DEPLOY_REGISTRY_USER --password-stdin registry.gitlab.com &&
        cd $WORKDIR/backend &&
        export IMAGE_TAG=$CI_COMMIT_SHORT_SHA &&
        export NODE_ENV=production &&
        docker compose pull &&
        docker compose down &&
        docker compose up -d
      "
      sh $CI_PROJECT_DIR/send_telegram.sh "[BE - PROD] ✅ DEPLOYED" "Image: \`$IMAGE_TAG_BE\`%0ABranch: \`$CI_COMMIT_REF_NAME\`%0ABy: \`$GITLAB_USER_NAME\`%0ATime: \`$(date -u '+%Y-%m-%d %H:%M UTC')\`"
  after_script:
    - |
      if [ "$CI_JOB_STATUS" != "success" ]; then
        sh $CI_PROJECT_DIR/send_telegram.sh "[BE - PROD] ❌ FAILED" "Job: \`$CI_JOB_NAME\`%0AStatus: \`$CI_JOB_STATUS\`%0ABranch: \`$CI_COMMIT_REF_NAME\`%0ABy: \`$GITLAB_USER_NAME\`"
      fi