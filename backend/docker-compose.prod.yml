services:
  strapi:
    image: registry.gitlab.com/huongdev-2025/ontoolaz/backend:master-${IMAGE_TAG}
    container_name: strapi
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV}
      STRAPI_TELEMETRY_DISABLED: true
    volumes:
      - strapi_prod_uploads:/app/public/uploads
    ports:
      - "1337:1337"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - strapi-network

  db:
    image: mysql:8
    container_name: strapi-db
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./docker/mysql/prod.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    ports:
      - "3307:3306"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - strapi-network

  redis:
    image: redis:7-alpine
    container_name: strapi-redis
    volumes:
      - redis_prod_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - strapi-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    container_name: strapi-pma
    restart: unless-stopped
    environment:
      PMA_HOST: db
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - strapi-network

volumes:
  mysql_prod_data:
  redis_prod_data:
  strapi_prod_uploads:

networks:
  strapi-network:
    driver: bridge
